<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">

	<!-- 페이징 기법에 사용될 전체페이지 수를 구하기 위해 전체 게시물 수 구하기 -->
	<select id="totalCount" resultType="int" parameterType="int">
		SELECT count(*) from inven_bbs
		WHERE status = 0
		AND type = #{reqnum}
	</select>
	<!--******************************-->
	
	<!-- 글의 목록을 만들기 위해 호출 -->
	<resultMap type="project.vo.BbsVO" id="map">
		<id column="b_idx" property="b_idx"/>
		<collection property="c_list" ofType="project.vo.CommVO"
			select="com" column="b_idx"/>
	</resultMap>

	<!-- 특정 글의 기본키를 조건으로 글의 댓글을 조회 / 댓글 작성자 정보 호출-->
	<select id="com" resultType="project.vo.CommVO" parameterType="String" resultMap="get_ansrvo">
		SELECT * FROM inven_comment
		WHERE b_idx = #{b_idx} and status = 0
		ORDER BY c_idx
	</select>
	
	<resultMap type="project.vo.CommVO" id="get_ansrvo">
		<association property="rvo" javaType="project.vo.RegVO" select="ansrvo" column="r_idx"/>
	</resultMap>
	
	<select id="ansrvo" resultType="project.vo.RegVO" parameterType="String">
		select * from regist_t
		where r_idx = #{r_idx}
	</select>

	<select id="bbslist" resultMap="map" parameterType="java.util.Map">
		SELECT * FROM (SELECT rownum r_num, a.*
						FROM (SELECT * FROM inven_bbs
							  WHERE status = 0
							  and type = #{reqnum}
							  ORDER BY b_idx DESC) a
		)
		WHERE r_num BETWEEN #{begin} AND #{end} 
	</select>
	<!--******************************-->
	
	<!-- 기본키(b_idx)를 이용한 특정글 조회 -->
	<resultMap type="project.vo.BbsVO" id="rvomap">
		<id column="b_idx" property="b_idx"/>
		<!-- 1:1 관계(has-a)를 가진 EmpVO의 dvo에 객체를 전달 / n:m 관계는 collection -->		
		<association property="rvo" javaType="project.vo.RegVO"
			select="get_rvo" column="r_idx" />
		<collection property="c_list" ofType="project.vo.CommVO"
			select="com" column="b_idx"/>
	</resultMap>
	
	<select id="get_rvo" resultType ="project.vo.RegVO" parameterType="String">
		SELECT * FROM regist_t
		WHERE r_idx = #{r_idx}
	</select>
	
	<select id="view" resultMap ="rvomap" parameterType="java.util.Map">
		SELECT * FROM inven_bbs
		WHERE b_idx = #{b_idx}
	</select>
	<!--******************************-->
	
	<!-- 댓글 저장 -->
	<insert id="c_add" parameterType="java.util.Map">
		INSERT INTO inven_comment
		VALUES (comment_t_seq.NEXTVAL, #{writer}, #{content}, #{pwd}, SYSDATE, #{ip}, #{b_idx}, #{r_idx}, #{status})
	</insert>
	<!--******************************-->
	
	<!-- Update를 이용한 댓글 삭제 -->
	<update id="c_del" parameterType="java.util.Map">
		UPDATE inven_comment
		SET status = 1
		WHERE b_idx = #{b_idx}
		AND	pwd = #{pwd}
	</update>
	<!--******************************-->
	
	<!-- 조회수 증가 -->
	<update id="hit" parameterType="String">
		UPDATE inven_bbs
		SET hit = hit+1
		WHERE b_idx = #{b_idx}
	</update>

	<!-- 글쓰기 -->
	<insert id="addBbs" parameterType="project.vo.BbsVO">
		INSERT INTO inven_bbs(type, b_idx, subject, writer, content, write_date, ip, status, file_name, hit, ori_name, pwd, recommend, kategorie, r_idx)
		values(#{type}, bbs_t_seq.NEXTVAL, #{subject}, #{writer}, #{content}, sysdate, #{ip}, 0, #{file_name}, 0, #{ori_name}, #{pwd}, 0, #{kategorie}, #{r_idx})
	</insert>

	<!-- 글 삭제 -->
	<update id="del" parameterType="String">
		update inven_bbs
		set
			status = 1
		where b_idx = #{b_idx}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="viewUpdate" parameterType="java.util.Map"> 
     update inven_bbs
     <set>
     	write_date = sysdate,
        <!-- 가장 마지막에 존재하는 콤마(,)를 잘라낸다. -->
        <trim suffixOverrides=","><!-- prefixOverrides는 앞에 것을 suffixOverrides는 뒤에 것을 지워준다. -->
           <if test="subject != null"><!-- map에 title이라는 키가 있을 때 -->
              subject = #{subject},
           </if>
           
           <if test="content != null">
              content = #{content},
           </if>
           
           <if test="file_name != null">
              file_name = #{file_name},
           </if>
           
           <if test="ori_name != null">
              ori_name = #{ori_name},
           </if>
           
           <if test="ip != null">
              ip = #{ip},
           </if>
           
           <if test="pwd != null">
              pwd = #{pwd},
           </if>
           
        </trim>
     </set>
     where b_idx = #{b_idx}
  </update>
	
</mapper>
